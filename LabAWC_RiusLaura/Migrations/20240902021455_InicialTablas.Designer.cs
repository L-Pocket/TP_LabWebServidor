// <auto-generated />
using System;
using LabAWC_RiusLaura.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabAWS_RiusLaura.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240902021455_InicialTablas")]
    partial class InicialTablas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entidades.Comanda", b =>
                {
                    b.Property<int>("IdComanda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComanda"));

                    b.Property<int>("MesaDeComandaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdComanda");

                    b.HasIndex("MesaDeComandaId");

                    b.ToTable("Comandas");
                });

            modelBuilder.Entity("Entidades.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<bool>("EmpleadoActivo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RolDelEmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("SectorDelEmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("RolDelEmpleadoId");

                    b.HasIndex("SectorDelEmpleadoId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Entidades.EstadoMesa", b =>
                {
                    b.Property<int>("IdEstadoMesa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoMesa"));

                    b.Property<string>("DescripcionMesa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstadoMesa");

                    b.ToTable("Estados_Mesas");
                });

            modelBuilder.Entity("Entidades.EstadoPedido", b =>
                {
                    b.Property<int>("IdEstadoPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoPedido"));

                    b.Property<string>("DescripcionPedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstadoPedido");

                    b.ToTable("Estados_Pedidos");
                });

            modelBuilder.Entity("Entidades.LogueoEmpleado", b =>
                {
                    b.Property<int>("IdLogueo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLogueo"));

                    b.Property<int>("EmpleadoLogId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaDeslogueo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaLogueo")
                        .HasColumnType("datetime2");

                    b.HasKey("IdLogueo");

                    b.HasIndex("EmpleadoLogId");

                    b.ToTable("LogueosEmpleados");
                });

            modelBuilder.Entity("Entidades.Mesa", b =>
                {
                    b.Property<int>("IdMesa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMesa"));

                    b.Property<string>("CodigoMesa")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("EstadoDeMesaId")
                        .HasColumnType("int");

                    b.HasKey("IdMesa");

                    b.HasIndex("EstadoDeMesaId");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("Entidades.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CodigoCliente")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("ComandaDelPedidoId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoDelPedidoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ObservacionesDelPedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductoDelPedidoId")
                        .HasColumnType("int");

                    b.Property<int>("TiempoEstimado")
                        .HasColumnType("int");

                    b.HasKey("IdPedido");

                    b.HasIndex("ComandaDelPedidoId");

                    b.HasIndex("EstadoDelPedidoId");

                    b.HasIndex("ProductoDelPedidoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Entidades.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("NombreDescProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioProducto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SectorProductoId")
                        .HasColumnType("int");

                    b.Property<int>("StockProducto")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.HasIndex("SectorProductoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Entidades.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("DescripcionRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Entidades.Sector", b =>
                {
                    b.Property<int>("IdSector")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSector"));

                    b.Property<string>("DescripcionSector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSector");

                    b.ToTable("Sectores");
                });

            modelBuilder.Entity("Entidades.Comanda", b =>
                {
                    b.HasOne("Entidades.Mesa", "MesaDeComanda")
                        .WithMany()
                        .HasForeignKey("MesaDeComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MesaDeComanda");
                });

            modelBuilder.Entity("Entidades.Empleado", b =>
                {
                    b.HasOne("Entidades.Rol", "RolDelEmpleado")
                        .WithMany()
                        .HasForeignKey("RolDelEmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Sector", "SectorDelEmpleado")
                        .WithMany()
                        .HasForeignKey("SectorDelEmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolDelEmpleado");

                    b.Navigation("SectorDelEmpleado");
                });

            modelBuilder.Entity("Entidades.LogueoEmpleado", b =>
                {
                    b.HasOne("Entidades.Empleado", "EmpleadoLog")
                        .WithMany()
                        .HasForeignKey("EmpleadoLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpleadoLog");
                });

            modelBuilder.Entity("Entidades.Mesa", b =>
                {
                    b.HasOne("Entidades.EstadoMesa", "EstadoDeMesa")
                        .WithMany()
                        .HasForeignKey("EstadoDeMesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoDeMesa");
                });

            modelBuilder.Entity("Entidades.Pedido", b =>
                {
                    b.HasOne("Entidades.Comanda", "ComandaDelPedido")
                        .WithMany()
                        .HasForeignKey("ComandaDelPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.EstadoPedido", "EstadoDelPedido")
                        .WithMany()
                        .HasForeignKey("EstadoDelPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Producto", "ProductoDelPedido")
                        .WithMany()
                        .HasForeignKey("ProductoDelPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComandaDelPedido");

                    b.Navigation("EstadoDelPedido");

                    b.Navigation("ProductoDelPedido");
                });

            modelBuilder.Entity("Entidades.Producto", b =>
                {
                    b.HasOne("Entidades.Sector", "SectorProducto")
                        .WithMany()
                        .HasForeignKey("SectorProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SectorProducto");
                });
#pragma warning restore 612, 618
        }
    }
}

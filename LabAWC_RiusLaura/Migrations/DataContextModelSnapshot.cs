// <auto-generated />
using System;
using LabAWC_RiusLaura.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabAWS_RiusLaura.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entidades.Comanda", b =>
                {
                    b.Property<int>("IdComanda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComanda"));

                    b.Property<int>("MesaDeComandaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdComanda");

                    b.HasIndex("MesaDeComandaId");

                    b.ToTable("Comandas", (string)null);

                    b.HasData(
                        new
                        {
                            IdComanda = 1,
                            MesaDeComandaId = 1,
                            NombreCliente = "Cliente A"
                        },
                        new
                        {
                            IdComanda = 2,
                            MesaDeComandaId = 2,
                            NombreCliente = "Cliente B"
                        },
                        new
                        {
                            IdComanda = 3,
                            MesaDeComandaId = 3,
                            NombreCliente = "Cliente C"
                        },
                        new
                        {
                            IdComanda = 4,
                            MesaDeComandaId = 4,
                            NombreCliente = "Cliente D"
                        },
                        new
                        {
                            IdComanda = 5,
                            MesaDeComandaId = 1,
                            NombreCliente = "Cliente E"
                        });
                });

            modelBuilder.Entity("Entidades.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<bool>("EmpleadoActivo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RolDelEmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("SectorDelEmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("RolDelEmpleadoId");

                    b.HasIndex("SectorDelEmpleadoId");

                    b.ToTable("Empleados", (string)null);

                    b.HasData(
                        new
                        {
                            IdEmpleado = 1,
                            EmpleadoActivo = true,
                            Nombre = "Juan Pérez",
                            Password = "password1",
                            RolDelEmpleadoId = 1,
                            SectorDelEmpleadoId = 1,
                            Usuario = "jperez"
                        },
                        new
                        {
                            IdEmpleado = 2,
                            EmpleadoActivo = true,
                            Nombre = "María Gómez",
                            Password = "password2",
                            RolDelEmpleadoId = 2,
                            SectorDelEmpleadoId = 2,
                            Usuario = "mgomez"
                        },
                        new
                        {
                            IdEmpleado = 3,
                            EmpleadoActivo = true,
                            Nombre = "Carlos López",
                            Password = "password3",
                            RolDelEmpleadoId = 3,
                            SectorDelEmpleadoId = 3,
                            Usuario = "clopez"
                        },
                        new
                        {
                            IdEmpleado = 4,
                            EmpleadoActivo = true,
                            Nombre = "Ana Martínez",
                            Password = "password4",
                            RolDelEmpleadoId = 4,
                            SectorDelEmpleadoId = 4,
                            Usuario = "amartinez"
                        },
                        new
                        {
                            IdEmpleado = 5,
                            EmpleadoActivo = true,
                            Nombre = "Jorge García",
                            Password = "password5",
                            RolDelEmpleadoId = 5,
                            SectorDelEmpleadoId = 5,
                            Usuario = "jgarcia"
                        },
                        new
                        {
                            IdEmpleado = 6,
                            EmpleadoActivo = false,
                            Nombre = "Laura Torres",
                            Password = "password6",
                            RolDelEmpleadoId = 1,
                            SectorDelEmpleadoId = 1,
                            Usuario = "ltorres"
                        },
                        new
                        {
                            IdEmpleado = 7,
                            EmpleadoActivo = true,
                            Nombre = "Esteban Rodriguez",
                            Password = "password7",
                            RolDelEmpleadoId = 5,
                            SectorDelEmpleadoId = 5,
                            Usuario = "erodriguez"
                        },
                        new
                        {
                            IdEmpleado = 8,
                            EmpleadoActivo = true,
                            Nombre = "Pedro Ramirez",
                            Password = "password8",
                            RolDelEmpleadoId = 3,
                            SectorDelEmpleadoId = 3,
                            Usuario = "pramirez"
                        },
                        new
                        {
                            IdEmpleado = 9,
                            EmpleadoActivo = false,
                            Nombre = "Gonzalo Fernandez",
                            Password = "password9",
                            RolDelEmpleadoId = 5,
                            SectorDelEmpleadoId = 5,
                            Usuario = "gfernandez"
                        });
                });

            modelBuilder.Entity("Entidades.EstadoMesa", b =>
                {
                    b.Property<int>("IdEstadoMesa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoMesa"));

                    b.Property<string>("DescripcionMesa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstadoMesa");

                    b.ToTable("Estados_Mesas", (string)null);

                    b.HasData(
                        new
                        {
                            IdEstadoMesa = 1,
                            DescripcionMesa = "Cliente Esperando Pedido"
                        },
                        new
                        {
                            IdEstadoMesa = 2,
                            DescripcionMesa = "Cliente Comiendo"
                        },
                        new
                        {
                            IdEstadoMesa = 3,
                            DescripcionMesa = "Cliente Pagando"
                        },
                        new
                        {
                            IdEstadoMesa = 4,
                            DescripcionMesa = "Cerrada"
                        });
                });

            modelBuilder.Entity("Entidades.EstadoPedido", b =>
                {
                    b.Property<int>("IdEstadoPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoPedido"));

                    b.Property<string>("DescripcionPedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstadoPedido");

                    b.ToTable("Estados_Pedidos", (string)null);

                    b.HasData(
                        new
                        {
                            IdEstadoPedido = 1,
                            DescripcionPedido = "Pendiente"
                        },
                        new
                        {
                            IdEstadoPedido = 2,
                            DescripcionPedido = "En Preparacion"
                        },
                        new
                        {
                            IdEstadoPedido = 3,
                            DescripcionPedido = "Listo Para Servir"
                        },
                        new
                        {
                            IdEstadoPedido = 4,
                            DescripcionPedido = "Servido"
                        },
                        new
                        {
                            IdEstadoPedido = 5,
                            DescripcionPedido = "Cancelado"
                        });
                });

            modelBuilder.Entity("Entidades.LogueoEmpleado", b =>
                {
                    b.Property<int>("IdLogueo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLogueo"));

                    b.Property<int>("EmpleadoLogId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaDeslogueo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaLogueo")
                        .HasColumnType("datetime2");

                    b.HasKey("IdLogueo");

                    b.HasIndex("EmpleadoLogId");

                    b.ToTable("LogueosEmpleados", (string)null);

                    b.HasData(
                        new
                        {
                            IdLogueo = 1,
                            EmpleadoLogId = 1,
                            FechaDeslogueo = new DateTime(2024, 8, 12, 23, 59, 0, 0, DateTimeKind.Local),
                            FechaLogueo = new DateTime(2024, 8, 12, 19, 6, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            IdLogueo = 2,
                            EmpleadoLogId = 2,
                            FechaDeslogueo = new DateTime(2024, 8, 12, 23, 59, 0, 0, DateTimeKind.Local),
                            FechaLogueo = new DateTime(2024, 8, 12, 19, 1, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            IdLogueo = 3,
                            EmpleadoLogId = 3,
                            FechaDeslogueo = new DateTime(2024, 8, 12, 23, 49, 0, 0, DateTimeKind.Local),
                            FechaLogueo = new DateTime(2024, 8, 12, 17, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            IdLogueo = 4,
                            EmpleadoLogId = 4,
                            FechaDeslogueo = new DateTime(2024, 8, 12, 23, 15, 0, 0, DateTimeKind.Local),
                            FechaLogueo = new DateTime(2024, 8, 12, 18, 16, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            IdLogueo = 5,
                            EmpleadoLogId = 5,
                            FechaDeslogueo = new DateTime(2024, 8, 13, 23, 33, 0, 0, DateTimeKind.Local),
                            FechaLogueo = new DateTime(2024, 8, 13, 19, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            IdLogueo = 6,
                            EmpleadoLogId = 6,
                            FechaDeslogueo = new DateTime(2024, 8, 13, 23, 55, 0, 0, DateTimeKind.Local),
                            FechaLogueo = new DateTime(2024, 8, 13, 19, 30, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("Entidades.Mesa", b =>
                {
                    b.Property<int>("IdMesa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMesa"));

                    b.Property<string>("CodigoMesa")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("EstadoDeMesaId")
                        .HasColumnType("int");

                    b.HasKey("IdMesa");

                    b.HasIndex("EstadoDeMesaId");

                    b.ToTable("Mesas", (string)null);

                    b.HasData(
                        new
                        {
                            IdMesa = 1,
                            CodigoMesa = "M1001",
                            EstadoDeMesaId = 1
                        },
                        new
                        {
                            IdMesa = 2,
                            CodigoMesa = "M1002",
                            EstadoDeMesaId = 1
                        },
                        new
                        {
                            IdMesa = 3,
                            CodigoMesa = "M1003",
                            EstadoDeMesaId = 4
                        },
                        new
                        {
                            IdMesa = 4,
                            CodigoMesa = "M1004",
                            EstadoDeMesaId = 1
                        });
                });

            modelBuilder.Entity("Entidades.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CodigoCliente")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("ComandaDelPedidoId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoDelPedidoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ObservacionesDelPedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductoDelPedidoId")
                        .HasColumnType("int");

                    b.Property<int>("TiempoEstimado")
                        .HasColumnType("int");

                    b.HasKey("IdPedido");

                    b.HasIndex("ComandaDelPedidoId");

                    b.HasIndex("EstadoDelPedidoId");

                    b.HasIndex("ProductoDelPedidoId");

                    b.ToTable("Pedidos", (string)null);

                    b.HasData(
                        new
                        {
                            IdPedido = 1,
                            Cantidad = 1,
                            CodigoCliente = "MBC12",
                            ComandaDelPedidoId = 1,
                            EstadoDelPedidoId = 1,
                            FechaCreacion = new DateTime(2024, 8, 12, 19, 30, 0, 0, DateTimeKind.Local),
                            ObservacionesDelPedido = "Con hielo",
                            ProductoDelPedidoId = 1,
                            TiempoEstimado = 10
                        },
                        new
                        {
                            IdPedido = 2,
                            Cantidad = 2,
                            CodigoCliente = "MBC12",
                            ComandaDelPedidoId = 1,
                            EstadoDelPedidoId = 1,
                            FechaCreacion = new DateTime(2024, 8, 12, 19, 30, 0, 0, DateTimeKind.Local),
                            ObservacionesDelPedido = "",
                            ProductoDelPedidoId = 3,
                            TiempoEstimado = 20
                        },
                        new
                        {
                            IdPedido = 3,
                            Cantidad = 3,
                            CodigoCliente = "MBC12",
                            ComandaDelPedidoId = 1,
                            EstadoDelPedidoId = 1,
                            FechaCreacion = new DateTime(2024, 8, 12, 19, 30, 0, 0, DateTimeKind.Local),
                            ObservacionesDelPedido = "",
                            ProductoDelPedidoId = 3,
                            TiempoEstimado = 30
                        },
                        new
                        {
                            IdPedido = 4,
                            Cantidad = 2,
                            CodigoCliente = "AD32S",
                            ComandaDelPedidoId = 2,
                            EstadoDelPedidoId = 1,
                            FechaCreacion = new DateTime(2024, 8, 12, 19, 30, 0, 0, DateTimeKind.Local),
                            ObservacionesDelPedido = "",
                            ProductoDelPedidoId = 8,
                            TiempoEstimado = 15
                        },
                        new
                        {
                            IdPedido = 5,
                            Cantidad = 2,
                            CodigoCliente = "KAE2K",
                            ComandaDelPedidoId = 3,
                            EstadoDelPedidoId = 1,
                            FechaCreacion = new DateTime(2024, 8, 12, 19, 30, 0, 0, DateTimeKind.Local),
                            ObservacionesDelPedido = "",
                            ProductoDelPedidoId = 9,
                            TiempoEstimado = 40
                        },
                        new
                        {
                            IdPedido = 6,
                            Cantidad = 4,
                            CodigoCliente = "TYH3K",
                            ComandaDelPedidoId = 5,
                            EstadoDelPedidoId = 4,
                            FechaCreacion = new DateTime(2024, 8, 24, 19, 30, 0, 0, DateTimeKind.Local),
                            FechaFinalizacion = new DateTime(2024, 8, 24, 19, 47, 0, 0, DateTimeKind.Local),
                            ObservacionesDelPedido = "bien frío",
                            ProductoDelPedidoId = 2,
                            TiempoEstimado = 15
                        });
                });

            modelBuilder.Entity("Entidades.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("NombreDescProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioProducto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SectorProductoId")
                        .HasColumnType("int");

                    b.Property<int>("StockProducto")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.HasIndex("SectorProductoId");

                    b.ToTable("Productos", (string)null);

                    b.HasData(
                        new
                        {
                            IdProducto = 1,
                            NombreDescProducto = "Vino tinto Malbec",
                            PrecioProducto = 14000.00m,
                            SectorProductoId = 1,
                            StockProducto = 50
                        },
                        new
                        {
                            IdProducto = 2,
                            NombreDescProducto = "Vino tinto Cabernet",
                            PrecioProducto = 14000.00m,
                            SectorProductoId = 1,
                            StockProducto = 40
                        },
                        new
                        {
                            IdProducto = 3,
                            NombreDescProducto = "Cerveza artesanal IPA Roja",
                            PrecioProducto = 3700.00m,
                            SectorProductoId = 2,
                            StockProducto = 200
                        },
                        new
                        {
                            IdProducto = 4,
                            NombreDescProducto = "Cerveza artesanal Negra",
                            PrecioProducto = 3700.00m,
                            SectorProductoId = 2,
                            StockProducto = 150
                        },
                        new
                        {
                            IdProducto = 5,
                            NombreDescProducto = "Empanadas de Carne",
                            PrecioProducto = 1500.00m,
                            SectorProductoId = 3,
                            StockProducto = 200
                        },
                        new
                        {
                            IdProducto = 6,
                            NombreDescProducto = "Empanadas de Verdura",
                            PrecioProducto = 1500.00m,
                            SectorProductoId = 3,
                            StockProducto = 100
                        },
                        new
                        {
                            IdProducto = 7,
                            NombreDescProducto = "Empanadas de Pollo",
                            PrecioProducto = 1500.00m,
                            SectorProductoId = 3,
                            StockProducto = 150
                        },
                        new
                        {
                            IdProducto = 8,
                            NombreDescProducto = "Postre Tiramisú",
                            PrecioProducto = 5000.00m,
                            SectorProductoId = 4,
                            StockProducto = 40
                        },
                        new
                        {
                            IdProducto = 9,
                            NombreDescProducto = "Café",
                            PrecioProducto = 2500.00m,
                            SectorProductoId = 4,
                            StockProducto = 400
                        });
                });

            modelBuilder.Entity("Entidades.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("DescripcionRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            IdRol = 1,
                            DescripcionRol = "Bartender"
                        },
                        new
                        {
                            IdRol = 2,
                            DescripcionRol = "Cervecero"
                        },
                        new
                        {
                            IdRol = 3,
                            DescripcionRol = "Cocinero"
                        },
                        new
                        {
                            IdRol = 4,
                            DescripcionRol = "Mozo"
                        },
                        new
                        {
                            IdRol = 5,
                            DescripcionRol = "Socio"
                        });
                });

            modelBuilder.Entity("Entidades.Sector", b =>
                {
                    b.Property<int>("IdSector")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSector"));

                    b.Property<string>("DescripcionSector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSector");

                    b.ToTable("Sectores", (string)null);

                    b.HasData(
                        new
                        {
                            IdSector = 1,
                            DescripcionSector = "Barra Tragos Y Vino"
                        },
                        new
                        {
                            IdSector = 2,
                            DescripcionSector = "Cerveza Artesanal"
                        },
                        new
                        {
                            IdSector = 3,
                            DescripcionSector = "Cocina"
                        },
                        new
                        {
                            IdSector = 4,
                            DescripcionSector = "Candybar"
                        },
                        new
                        {
                            IdSector = 5,
                            DescripcionSector = "General"
                        });
                });

            modelBuilder.Entity("Entidades.Comanda", b =>
                {
                    b.HasOne("Entidades.Mesa", "MesaDeComanda")
                        .WithMany()
                        .HasForeignKey("MesaDeComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MesaDeComanda");
                });

            modelBuilder.Entity("Entidades.Empleado", b =>
                {
                    b.HasOne("Entidades.Rol", "RolDelEmpleado")
                        .WithMany()
                        .HasForeignKey("RolDelEmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Sector", "SectorDelEmpleado")
                        .WithMany()
                        .HasForeignKey("SectorDelEmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolDelEmpleado");

                    b.Navigation("SectorDelEmpleado");
                });

            modelBuilder.Entity("Entidades.LogueoEmpleado", b =>
                {
                    b.HasOne("Entidades.Empleado", "EmpleadoLog")
                        .WithMany()
                        .HasForeignKey("EmpleadoLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpleadoLog");
                });

            modelBuilder.Entity("Entidades.Mesa", b =>
                {
                    b.HasOne("Entidades.EstadoMesa", "EstadoDeMesa")
                        .WithMany()
                        .HasForeignKey("EstadoDeMesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoDeMesa");
                });

            modelBuilder.Entity("Entidades.Pedido", b =>
                {
                    b.HasOne("Entidades.Comanda", "ComandaDelPedido")
                        .WithMany()
                        .HasForeignKey("ComandaDelPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.EstadoPedido", "EstadoDelPedido")
                        .WithMany()
                        .HasForeignKey("EstadoDelPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Producto", "ProductoDelPedido")
                        .WithMany()
                        .HasForeignKey("ProductoDelPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComandaDelPedido");

                    b.Navigation("EstadoDelPedido");

                    b.Navigation("ProductoDelPedido");
                });

            modelBuilder.Entity("Entidades.Producto", b =>
                {
                    b.HasOne("Entidades.Sector", "SectorProducto")
                        .WithMany()
                        .HasForeignKey("SectorProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SectorProducto");
                });
#pragma warning restore 612, 618
        }
    }
}
